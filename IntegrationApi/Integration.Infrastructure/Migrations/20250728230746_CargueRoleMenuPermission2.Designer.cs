// <auto-generated />
using System;
using Integration.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Integration.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250728230746_CargueRoleMenuPermission2")]
    partial class CargueRoleMenuPermission2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Integration.Core.Entities.Audit.Log", b =>
                {
                    b.Property<Guid>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeApplication")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CodeUser")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("DurationMs")
                        .HasColumnType("bigint");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Information");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LogId");

                    b.ToTable("Logs", "Audit");
                });

            modelBuilder.Entity("Integration.Core.Entities.Parametric.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeDane")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("City", "Parametric");
                });

            modelBuilder.Entity("Integration.Core.Entities.Parametric.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeDane")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Department", "Parametric");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeDane = "91",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Amazonas",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            CodeDane = "05",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Antioquia",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            CodeDane = "81",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Arauca",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            CodeDane = "08",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Atlántico",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            CodeDane = "11",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Bogotá, D.C.",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            CodeDane = "13",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Bolívar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 7,
                            CodeDane = "15",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Boyacá",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 8,
                            CodeDane = "17",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Caldas",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 9,
                            CodeDane = "18",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Caquetá",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 10,
                            CodeDane = "85",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Casanare",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 11,
                            CodeDane = "19",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Cauca",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 12,
                            CodeDane = "20",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Cesar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 13,
                            CodeDane = "27",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Chocó",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 14,
                            CodeDane = "23",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Córdoba",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 15,
                            CodeDane = "25",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Cundinamarca",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 16,
                            CodeDane = "94",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Guainía",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 17,
                            CodeDane = "95",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Guaviare",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 18,
                            CodeDane = "41",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Huila",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 19,
                            CodeDane = "44",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "La Guajira",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 20,
                            CodeDane = "47",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Magdalena",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 21,
                            CodeDane = "50",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Meta",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 22,
                            CodeDane = "52",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Nariño",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 23,
                            CodeDane = "54",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Norte de Santander",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 24,
                            CodeDane = "86",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Putumayo",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 25,
                            CodeDane = "63",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Quindío",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 26,
                            CodeDane = "66",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Risaralda",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 27,
                            CodeDane = "88",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "San Andrés, Providencia y Santa Catalina",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 28,
                            CodeDane = "68",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Santander",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 29,
                            CodeDane = "70",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Sucre",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 30,
                            CodeDane = "73",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Tolima",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 31,
                            CodeDane = "76",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Valle del Cauca",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 32,
                            CodeDane = "97",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Vaupés",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 33,
                            CodeDane = "99",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Vichada",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Parametric.IdentificationDocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IdentificationDocumentType", "Parametric");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "CC",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Cedula Ciudadania",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "CE",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Cedula Extrangeria",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "PA",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Pasaporte",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "PE",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Permiso Especial de permanencia",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "PT",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Permiso por protección temporal",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "NI",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Description = "Nit",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Applications", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "APP0000001",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Integrador",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            Code = "APP0000002",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Saga 2.0",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            Code = "APP0000003",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Sicof Lite",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IDX_Menus_Code");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("Menu", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MNU0000001",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "cog-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Administración",
                            Order = 0,
                            Route = "/administracion",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            Code = "MNU0000002",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "grid-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Aplicación",
                            Order = 1,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-aplicacion",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            Code = "MNU0000003",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "layers-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Módulo",
                            Order = 2,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-modulo",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            Code = "MNU0000004",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "menu-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Menú",
                            Order = 3,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-menu",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            Code = "MNU0000005",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "lock-closed-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Permisos",
                            Order = 4,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-permisos",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            Code = "MNU0000006",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "people-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Usuarios",
                            Order = 5,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-usuarios",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 7,
                            Code = "MNU0000007",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "extension-puzzle-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Gestionar Roles",
                            Order = 6,
                            ParentMenuId = 1,
                            Route = "/administracion/gestionar-roles",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 8,
                            Code = "MNU0000008",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "person-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Asignar Role a Usuario",
                            Order = 7,
                            ParentMenuId = 1,
                            Route = "/administracion/asignar-roles",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 9,
                            Code = "MNU0000009",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "key-outline",
                            IsActive = true,
                            ModuleId = 1,
                            Name = "Configuración de Permisos",
                            Order = 8,
                            ParentMenuId = 1,
                            Route = "/administracion/configuracion-permisos",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 10,
                            Code = "MNU0000010",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "cog-outline",
                            IsActive = true,
                            ModuleId = 2,
                            Name = "Administración",
                            Order = 0,
                            Route = "/administracion",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 11,
                            Code = "MNU0000011",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "people-outline",
                            IsActive = true,
                            ModuleId = 2,
                            Name = "Gestionar Usuarios",
                            Order = 1,
                            ParentMenuId = 10,
                            Route = "/administracion/gestionar-usuarios",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 12,
                            Code = "MNU0000012",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "extension-puzzle-outline",
                            IsActive = true,
                            ModuleId = 2,
                            Name = "Gestionar Roles",
                            Order = 2,
                            ParentMenuId = 10,
                            Route = "/administracion/gestionar-roles",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 13,
                            Code = "MNU0000013",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "person-outline",
                            IsActive = true,
                            ModuleId = 2,
                            Name = "Asignar Role a Usuario",
                            Order = 3,
                            ParentMenuId = 10,
                            Route = "/administracion/asignar-roles",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 14,
                            Code = "MNU0000014",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "key-outline",
                            IsActive = true,
                            ModuleId = 2,
                            Name = "Configuración de Permisos",
                            Order = 4,
                            ParentMenuId = 10,
                            Route = "/administracion/configuracion-permisos",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 15,
                            Code = "MNU0000015",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "description",
                            IsActive = true,
                            ModuleId = 3,
                            Name = "Principal",
                            Order = 0,
                            Route = "/interface",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 16,
                            Code = "MNU0000016",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "description",
                            IsActive = true,
                            ModuleId = 3,
                            Name = "Panel de control",
                            Order = 1,
                            ParentMenuId = 15,
                            Route = "/interface/inicio",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 17,
                            Code = "MNU0000017",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "description",
                            IsActive = true,
                            ModuleId = 3,
                            Name = "Tramite",
                            Order = 2,
                            ParentMenuId = 15,
                            Route = "/interface/tramites",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 18,
                            Code = "MNU0000018",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "description",
                            IsActive = true,
                            ModuleId = 3,
                            Name = "Inscripciones",
                            Order = 3,
                            ParentMenuId = 15,
                            Route = "/interface/inscripciones",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 19,
                            Code = "MNU0000019",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            Icon = "description",
                            IsActive = true,
                            ModuleId = 3,
                            Name = "Novedades",
                            Order = 4,
                            ParentMenuId = 15,
                            Route = "/interface/novedades",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IDX_Modules_Code");

                    b.ToTable("Modules", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 1,
                            Code = "MOD0000001",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Configuración",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 3,
                            Code = "MOD0000002",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Administración",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationId = 3,
                            Code = "MOD0000003",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Principal",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IDX_Permissions_Code");

                    b.ToTable("Permissions", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PER0000001",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Consultar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            Code = "PER0000002",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Crear",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            Code = "PER0000003",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Modificar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            Code = "PER0000004",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Desactivar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            Code = "PER0000005",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Cargar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            Code = "PER0000006",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Descargar",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IDX_Roles_Code");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 1,
                            Code = "ROL0000001",
                            ConcurrencyStamp = "9d2736e7-7fef-4779-a2cc-474789c810fe",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Administrador Integrador",
                            NormalizedName = "ADMINISTRADOR INTEGRADOR",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 2,
                            Code = "ROL0000002",
                            ConcurrencyStamp = "358ddaa5-d5af-4e94-82aa-1dea712b41ff",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Administrador Saga 2.0",
                            NormalizedName = "ADMINISTRADOR SAGA 2.0",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationId = 3,
                            Code = "ROL0000003",
                            ConcurrencyStamp = "d837f09f-22a7-44a9-9ad3-5358fc25a463",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Administrador Sicof Lite",
                            NormalizedName = "ADMINISTRADOR SICOF LITE",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationId = 2,
                            Code = "ROL0000004",
                            ConcurrencyStamp = "3c2fac15-ca08-4b21-9175-fee779734fa8",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Asignador",
                            NormalizedName = "ASIGNADOR",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationId = 2,
                            Code = "ROL0000005",
                            ConcurrencyStamp = "6f5e165e-d753-4847-84b1-913142273d00",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Gestor",
                            NormalizedName = "GESTOR",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            ApplicationId = 2,
                            Code = "ROL0000006",
                            ConcurrencyStamp = "b69f36df-8915-4287-949e-80c1f0d99cf8",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            Name = "Notificador",
                            NormalizedName = "NOTIFICADOR",
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Security");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.RoleMenuPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenuPermission", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 2,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 2,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 2,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 2,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 3,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 3,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 3,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 3,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 4,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 4,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 4,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 4,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 5,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 5,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 5,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 5,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 5,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 6,
                            PermissionId = 6,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 7,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 7,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 7,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 7,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 5,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 8,
                            PermissionId = 6,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 2,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 3,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 4,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 5,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 9,
                            PermissionId = 6,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 1,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 2,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 3,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 4,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 5,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 11,
                            PermissionId = 6,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 12,
                            PermissionId = 1,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 12,
                            PermissionId = 2,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 12,
                            PermissionId = 3,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 12,
                            PermissionId = 4,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 13,
                            PermissionId = 1,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 13,
                            PermissionId = 2,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 13,
                            PermissionId = 3,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            MenuId = 13,
                            PermissionId = 4,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IDX_Users_Code");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IDX_Users_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("IDX_Users_UserName")
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Code = "USR0000001",
                            ConcurrencyStamp = "b69f36df-8915-4287-949e-80c1f0d99cf8",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            DateOfBirth = new DateTime(1990, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "epulido@minsalud.gov.co",
                            EmailConfirmed = false,
                            FirstName = "Erika",
                            IsActive = true,
                            LastName = "Pulido",
                            LockoutEnabled = true,
                            NormalizedEmail = "EPULIDO",
                            NormalizedUserName = "EPULIDO@MINSALUD.GOV.CO",
                            PasswordHash = "AQAAAAIAAYagAAAAEMorJok85V7Kpf/EgOzE6dsr3UWrk6idDyT7BZszoRpr9OziW0BLL6vuF2zVj0B5ig==",
                            PhoneNumber = "3157234493",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2756991d-795c-4132-8848-34d79e60b300",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system",
                            UserName = "epulido"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Code = "USR0000002",
                            ConcurrencyStamp = "b69f36df-8915-4287-949e-80c1f0d99cf8",
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            DateOfBirth = new DateTime(1990, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sjmedina@Minsalud.gov.co",
                            EmailConfirmed = false,
                            FirstName = "Sandra",
                            IsActive = true,
                            LastName = "Medina",
                            LockoutEnabled = true,
                            NormalizedEmail = "SJMEDINA",
                            NormalizedUserName = "SJMEDINA@MINSALUD.GOV.CO",
                            PasswordHash = "AQAAAAIAAYagAAAAEMorJok85V7Kpf/EgOzE6dsr3UWrk6idDyT7BZszoRpr9OziW0BLL6vuF2zVj0B5ig==",
                            PhoneNumber = "3157234494",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2756991d-795c-4132-8848-34d79e60b300",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system",
                            UserName = "sjmedina"
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_UserClaims_UserId");

                    b.ToTable("UserClaims", "Security");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_UserLogins_UserId");

                    b.ToTable("UserLogins", "Security");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .HasDatabaseName("IDX_UserRoles_UserId_RoleId");

                    b.ToTable("UserRoles", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "system",
                            IsActive = true,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedBy = "system",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Security");
                });

            modelBuilder.Entity("Integration.Core.Entities.Parametric.City", b =>
                {
                    b.HasOne("Integration.Core.Entities.Parametric.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Menu", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Integration.Core.Entities.Security.Menu", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("ParentMenuId");

                    b.Navigation("Module");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Module", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Application", "Application")
                        .WithMany("Modules")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Role", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Application", "Application")
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.RoleClaim", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.RoleMenuPermission", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Integration.Core.Entities.Security.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Integration.Core.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserClaim", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserLogin", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserRole", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Integration.Core.Entities.Security.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.UserToken", b =>
                {
                    b.HasOne("Integration.Core.Entities.Security.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Application", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Menu", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Integration.Core.Entities.Security.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
